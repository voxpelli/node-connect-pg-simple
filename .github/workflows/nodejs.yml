name: Node CI

on:
  - push
  - pull_request

jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }} with Postgres ${{ matrix.postgres_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node_version: [10, 12, 14]
        os: [ubuntu-latest]
        postgres_version: [12, 11, 10, 9.6]
    services:
      postgres:
        image: postgres:${{ matrix.postgres_version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_version }}
    - name: npm install
      run: npm install
    - name: Mocha tests
      run: npm run test:mocha
      env:
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }}
    - name: Coveralls Parallel
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.github_token }}
        flag-name: run-${{ matrix.os }}-${{ matrix.node_version }}-${{ matrix.postgres_version }}
        parallel: true
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
  lint:
    name: Static code analysis / Linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [12]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install
      run: npm install
    - name: build
      run: npm run build --if-present
    - name: check
      run: npm run check
